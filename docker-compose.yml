version: "3.8"
services:
  api:
    build: fastapi_app
    ports:
      - "${FASTAPI_PORT}:${FASTAPI_PORT}"
    environment:
      FASTAPI_PORT: ${FASTAPI_PORT}
    networks:
      - app_network

  streamlit:
    build: streamlit_app
    ports:
      - "${STREAMLIT_PORT}:${STREAMLIT_PORT}"
    depends_on:
      - api
    environment:
      API_URL: http://api:${FASTAPI_PORT}/
    volumes:
      - ./logs:/logs  # Montage du volume pour stocker les logs de loguruuuuuuuu      
    networks:
      - app_network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "${PROMETHEUS_PORT}:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    depends_on:
      - api
    networks:
      - app_network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "${GRAFANA_PORT}:3000"
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
    volumes:
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources      
    depends_on:
      - prometheus
    networks:
      - app_network

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    ports:
      - "9100:9100"
    networks:
      - app_network
      
  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: uptime-kuma
    ports:
      - "${KUMA_PORT}:3001"
    volumes:
      - ./uptime-kuma:/app/data
    restart: always
    networks:
      - app_network

networks:
  app_network: